{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/classes/behavior.ts","webpack:///./list/form-ajax/classes/http.ts","webpack:///./list/form-ajax/form-ajax.behavior.ts","webpack:///./list/form-validate/classes/input-error.ts","webpack:///./list/form-validate/form-validate.behavior.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Behavior","[object Object]","element","_options","children","this","options","mergeOptions","defaultOptions","childName","child","Http","url","_settings","request","requestType","http_request","XMLHttpRequest","settings","data","getData","enctype","form","getAttribute","overrideMimeType","promise","Promise","resolve","reject","onreadystatechange","readyState","status","open","user","password","headers","header","setRequestHeader","send","inputs","elements","length","input","type","parsedData","substring","JSON","stringify","FormData","form_ajax_behavior_FormAjaxBehavior","behavior","messageFailure","undefined","messageSuccess","nodeName","build","eventsHandler","console","warn","insertAdjacentHTML","ajaxBox","nextElementSibling","querySelectorAll","addEventListener","e","__awaiter","preventDefault","sendForm","checkValidity","action","onSend","req","post","Accept","clearForm","onSuccess","err","onFailure","classList","add","responseText","innerHTML","behaviorName","InputError","insertElement","insertPosition","errorElement","_errorElement","message","text","parentElement","querySelector","node","document","createElement","setAttribute","insertBefore","nextSibling","insertAdjacentElement","form_validate_behavior_FormValidateBehavior","first","inputErrors","Array","createInputError","validType","isValid","validProcess","inputValidProcess","inputError","getInputError","inputValidation","clear","onInputValid","getErrorMessage","onInputError","validity","validationMessage","v","customMessage","dataset","remove","push","find"],"mappings":"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","file":"behaviors-list-basic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import { IBehaviorOptions } from \"../interfaces/behavior-options\";\r\nimport { IBehaviorChildren } from \"../interfaces/behavior-children\";\r\n\r\nexport abstract class Behavior {\r\n\tpublic static behaviorName: string;\r\n\r\n\tprotected abstract defaultOptions: { [key: string]: any };\r\n\r\n\tpublic options: { [key: string]: any } = {};\r\n\tconstructor(public element: HTMLElement, protected _options: IBehaviorOptions, public readonly children: IBehaviorChildren) {}\r\n\r\n\tpublic abstract init(): void;\r\n\r\n\tpublic beforeInit(): void {\r\n\t\tthis.mergeOptions(this._options);\r\n\t}\r\n\r\n\tprivate mergeOptions(_options: { [key: string]: any }) {\r\n\t\tfor (let i in this.defaultOptions) {\r\n\t\t\tthis.options[i] = this.defaultOptions[i];\r\n\t\t}\r\n\r\n\t\tfor (let i in _options) {\r\n\t\t\tthis.options[i] = _options[i];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addChildren(childName: string, child: HTMLElement | HTMLElement[]) {\r\n\t\tthis.children[childName] = child;\r\n\t}\r\n\r\n\tpublic removeChildren(childName: string) {\r\n\t\tdelete this.children[childName];\r\n\t}\r\n}\r\n","type HttpSettings = {\r\n    form: HTMLFormElement;\r\n    headers?: { [key: string]: string };\r\n    [key: string]: any;\r\n}\r\n\r\nexport class Http {\r\n\r\n    public static post(url: string, _settings: HttpSettings): Promise<XMLHttpRequest> {\r\n        return this.request('POST', url, _settings);\r\n    }\r\n\r\n    private static request(requestType: 'GET' | 'POST' | 'PUT' | 'UPDATE', url: string, _settings: HttpSettings): Promise<XMLHttpRequest> {\r\n        const http_request: XMLHttpRequest = new XMLHttpRequest(),\r\n            settings = _settings,\r\n            data = this.getData(settings),\r\n            enctype = settings.form.getAttribute('enctype') ? settings.form.getAttribute('enctype') : 'application/x-www-form-urlencoded';;\r\n\r\n        if (http_request.overrideMimeType) {\r\n            http_request.overrideMimeType('text/xml');\r\n        }\r\n\r\n        let promise = new Promise((resolve: (req: XMLHttpRequest) => any, reject) => {\r\n            http_request.onreadystatechange = () => {\r\n                if (http_request.readyState == 4) {\r\n                    if (http_request.status >= 200 && http_request.status < 300) {\r\n                        resolve(http_request);\r\n                    } else {\r\n                        reject(http_request);\r\n                    }\r\n\r\n                }\r\n            };\r\n        });\r\n        http_request.open(requestType,\r\n            url,\r\n            true, settings.user, settings.password);\r\n\r\n        if (settings.headers) {\r\n            for (let header in settings.headers) {\r\n                http_request.setRequestHeader(header, settings.headers[header]);\r\n            }\r\n        }\r\n        \r\n        if(enctype) {\r\n            http_request.setRequestHeader('Content-Type', enctype);\r\n        }\r\n\r\n        http_request.send(data);\r\n\r\n        return promise;\r\n    }\r\n\r\n    public static getData(settings: HttpSettings) {\r\n        let data: { [key: string]: string } = {},\r\n            enctype = settings.form.getAttribute('enctype') ? settings.form.getAttribute('enctype') : 'application/x-www-form-urlencoded';\r\n        const inputs = settings.form.elements;\r\n\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const input = inputs[i] as HTMLInputElement;\r\n            if (input.type == 'submit') continue;\r\n\r\n            data[input.name] = input.value;\r\n        }\r\n\r\n\r\n        let parsedData: string = '';\r\n        for (let d in data) {\r\n            parsedData += d + '=' + data[d] + '&';\r\n        }\r\n\r\n        if (parsedData.length > 1) {\r\n            parsedData = parsedData.substring(0, parsedData.length - 1);\r\n        }\r\n\r\n        if (enctype == 'application/json') {\r\n            return JSON.stringify(data);\r\n        } else if (enctype == 'application/x-www-form-urlencoded') {\r\n            return parsedData;\r\n        } else {\r\n            return new FormData(settings.form);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Behavior } from \"../../src/classes/behavior\";\r\nimport { FormAjaxOptions } from \"./form-ajax.options\";\r\nimport { Http } from \"./classes/http\";\r\n\r\nexport class FormAjaxBehavior extends Behavior {\r\n\tpublic static behaviorName = \"form-ajax\";\r\n\r\n\t\r\n\tprotected defaultOptions: FormAjaxOptions = {\r\n\t\tmessageFailure: undefined,\r\n\t\tmessageSuccess: undefined\r\n\t};\r\n\tpublic options: FormAjaxOptions;\r\n\t\r\n\tprotected ajaxBox: HTMLElement;\r\n\r\n\tpublic init(): void {\r\n\t\tif (this.element.nodeName != 'FORM') {\r\n\t\t\tconsole.warn('FormBehavior: element should be form, skip. ', this.element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.build();\r\n\t\tthis.eventsHandler();\r\n\t}\r\n\r\n\tpublic build() {\r\n\t\tthis.element.insertAdjacentHTML('afterend', `\r\n\t\t\t<div class=\"ajax-box\"></div>\r\n\t\t`);\r\n\r\n\t\tthis.ajaxBox = this.element.nextElementSibling as HTMLElement;\r\n\t}\r\n\r\n\tpublic clearForm() {\r\n\t\tconst inputs = this.element.querySelectorAll('input:not([type=\"submit\"]), textarea');\r\n\r\n\t\tfor (let i = 0; i < inputs.length; i++) {\r\n\t\t\t(<HTMLInputElement>inputs[i]).value = '';\r\n\t\t}\r\n\t}\r\n\r\n\tprotected eventsHandler() {\r\n\t\tthis.element.addEventListener('submit', async (e) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tthis.sendForm();\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async sendForm() {\r\n\t\tif (!(<HTMLFormElement>this.element).checkValidity()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet form = this.element as HTMLFormElement;\r\n\t\tconst action = this.element.getAttribute('action');\r\n\r\n\t\tif (!action) {\r\n\t\t\tconsole.warn('Action attribute undefined.', this.element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.onSend();\r\n\t\ttry {\r\n\t\t\tconst req = await Http.post(action, {\r\n\t\t\t\tform: form,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Accept\": \"application/json, text/plain, */*\"\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.clearForm();\r\n\t\t\tthis.onSuccess(req);\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.warn('Request error.', this.element, err);\r\n\t\t\tthis.onFailure(err);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onSuccess(req: XMLHttpRequest) {\r\n\t\tthis.ajaxBox.classList.add('ajax-box--sent');\r\n\t\tlet responseText = this.options.messageSuccess ? this.options.messageSuccess : req.responseText;\r\n\r\n\t\tthis.ajaxBox.innerHTML = '<p>' + responseText + '</p>';\r\n\t}\r\n\r\n\tpublic onFailure(req: XMLHttpRequest) {\r\n\t\tthis.ajaxBox.classList.add('ajax-box--error');\r\n\t\tlet responseText = this.options.messageFailure ? this.options.messageFailure : req.responseText;\r\n\r\n\t\tthis.ajaxBox.innerHTML = '<p>' + responseText + '</p>';\r\n\t}\r\n\r\n\tpublic onSend() {\r\n\t\tthis.ajaxBox.classList.add('ajax-box--pending');\r\n\t}\r\n\r\n}\r\n","export class InputError {\r\n\tprotected _errorElement: HTMLElement;\r\n\r\n\tget errorElement(): HTMLElement {\r\n\t\treturn this._errorElement;\r\n\t}\r\n\r\n\tset message(text: string) {\r\n\t\tthis._errorElement.innerHTML = text;\r\n\t}\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, public insertElement: HTMLElement = input, public insertPosition: InsertPosition = 'afterend') {\r\n\t\tthis.create();\r\n\t}\r\n\r\n\tprotected create() {\r\n\t\tif (!this.input.parentElement) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._errorElement = this.input.parentElement.querySelector(`[error-for=\"${this.input.name}\"]`) as HTMLElement;\r\n\r\n\t\tif (!this._errorElement) {\r\n\t\t\tlet node = document.createElement('DIV');\r\n\t\t\tnode.classList.add('error-message');\r\n\t\t\tnode.setAttribute('error-for', this.input.name);\r\n\t\t\tnode.setAttribute('aria-live', 'polite');\r\n\r\n\t\t\tthis._errorElement = this.input.parentElement.insertBefore(node, this.input.nextSibling);\r\n\t\t\tthis.insertElement.insertAdjacentElement(this.insertPosition, this._errorElement);\r\n\t\t}\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis._errorElement.innerHTML = '';\r\n\t}\r\n\r\n}","import { Behavior } from \"../../src/classes/behavior\";\r\nimport { FormValidateOptions } from \"./form-validate.options\";\r\nimport { InputError } from \"./classes/input-error\";\r\n\r\n\r\nexport class FormValidateBehavior extends Behavior {\r\n\tprotected defaultOptions: FormValidateOptions = {\r\n\t\ttype: 'mixed',\r\n\t\tfirst: false\r\n\t};\r\n\r\n\tpublic static behaviorName = \"form-validate\";\r\n\r\n\tprotected inputs: NodeListOf<HTMLElement>;\r\n\tprotected inputErrors = new Array<InputError>();\r\n\t\r\n\tpublic options: FormValidateOptions;\r\n\r\n\tpublic init(): void {\r\n\t\tif(this.element.nodeName != 'FORM') {\r\n\t\t\tconsole.warn('FormBehavior: element should be form, skip. ', this.element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.options.type == undefined) {\r\n\t\t\tthis.options.type = 'mixed';\r\n\t\t}\r\n\r\n\t\tthis.inputs = this.element.querySelectorAll('input:not([type=\"submit\"]), textarea');\r\n\r\n\t\tfor(let i = 0; i < this.inputs.length; i++) {\r\n\t\t\tthis.createInputError(this.inputs[i] as HTMLInputElement);\r\n\t\t}\r\n\r\n\t\tthis.eventsHandler();\r\n\t}\r\n\r\n\tprotected eventsHandler() {\r\n\t\tconst validType = this.options.type;\r\n\r\n\t\tthis.element.addEventListener('submit', (e) => {\r\n\t\t\tlet isValid = true;\r\n\t\t\tfor(let i = 0; i < this.inputs.length; i++) {\r\n\t\t\t\tlet validProcess = this.inputValidProcess(this.inputs[i] as HTMLInputElement);\r\n\r\n\t\t\t\tif(!validProcess) {\r\n\t\t\t\t\tisValid = validProcess;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.options.first && !validProcess) break;\r\n\t\t\t}\r\n\r\n\t\t\tif(!isValid) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(validType == 'keyup' || validType == 'mixed') {\r\n\t\t\tfor(let i = 0; i < this.inputs.length; i++) {\r\n\t\t\t\tconst input = this.inputs[i] as HTMLInputElement;\r\n\t\t\t\tinput.addEventListener('keyup', () => {\r\n\t\t\t\t\tif(validType == 'mixed' && input.getAttribute('dirty') != 'true')\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tthis.inputValidProcess(input)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\r\n\tprotected inputValidation(input: HTMLInputElement): boolean {\r\n\t\treturn input.checkValidity();\r\n\t}\r\n\r\n\tprotected inputValidProcess(input: HTMLInputElement): boolean {\r\n\t\tconst inputError = this.getInputError(input),\r\n\t\t\tisValid = this.inputValidation(input);\r\n\r\n\t\tif(!isValid) {\r\n\t\t\tconst message = this.getErrorMessage(input)\r\n\r\n\t\t\tinputError.message = message;\r\n\r\n\r\n\t\t\t\t\r\n\t\t\tinput.setAttribute('dirty', 'true');\r\n\t\t\tthis.onInputError(input);\r\n\r\n\t\t} else {\r\n\t\t\tinputError.clear();\r\n\t\t\tthis.onInputValid(input);\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tprotected getErrorMessage(input: HTMLInputElement) {\r\n\t\tlet validity = input.validity as any,\r\n\t\t\tmessage = input.validationMessage;\r\n\r\n\t\tfor (let v in validity) {\r\n\t\t\tif (!validity[v]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet customMessage = input.dataset[v];\r\n\r\n\t\t\tif (customMessage) {\r\n\t\t\t\tmessage = customMessage;\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn message;\r\n\t}\r\n\r\n\tprotected onInputError(input: HTMLInputElement): void {\r\n\t\tinput.classList.add('error')\r\n\t}\r\n\r\n\tprotected onInputValid(input: HTMLInputElement): void {\r\n\t\tinput.classList.remove('error')\r\n\t}\r\n\r\n\t// errors\r\n\tprotected createInputError(input: HTMLInputElement) {\r\n\t\tthis.inputErrors.push(new InputError(input));\r\n\t}\r\n\r\n\tprotected getInputError(input: HTMLInputElement): InputError  {\r\n\t\tlet inputError = this.inputErrors.find(i => i.input == input);\r\n\t\t\r\n\t\tif(!inputError)\r\n\t\t\tinputError = new InputError(input);\r\n\r\n\t\treturn inputError;\r\n\t}\r\n\r\n}\r\n"],"sourceRoot":""}