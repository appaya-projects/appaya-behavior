{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/classes/behavior.ts","webpack:///./src/core/behaviors-parser.ts","webpack:///./src/behavior-bootstrap.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Behavior","[object Object]","element","_options","children","this","options","mergeOptions","defaultOptions","childName","child","BehaviorsParser","behaviors","behaviorElements","document","querySelectorAll","behaviorInstances","length","attrs","getAttribute","attrsArray","split","behavior","filter","b","indexOf","behaviorName","behaviorInstance","createInstance","push","removeAttribute","console","warn","parseOptions","parseChildren","dataset","datasetOptions","data","parsedData","isNaN","parseInt","e","childrenObject","childObject","Array","isArray","BehaviorBootstrap","behaviorsParser","instances","initializeBehaviors","checkBehaviors","instance","beforeInit","init"],"mappings":"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","file":"appaya-behavior.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { IBehaviorOptions } from \"../interfaces/behavior-options\";\r\nimport { IBehaviorChildren } from \"../interfaces/behavior-children\";\r\n\r\nexport abstract class Behavior {\r\n\tpublic static behaviorName: string;\r\n\r\n\tprotected abstract defaultOptions: { [key: string]: any };\r\n\r\n\tpublic options: { [key: string]: any } = {};\r\n\tconstructor(public element: HTMLElement, protected _options: IBehaviorOptions, public readonly children: IBehaviorChildren) {}\r\n\r\n\tpublic abstract init(): void;\r\n\r\n\tpublic beforeInit(): void {\r\n\t\tthis.mergeOptions(this._options);\r\n\t}\r\n\r\n\tprivate mergeOptions(_options: { [key: string]: any }) {\r\n\t\tfor (let i in this.defaultOptions) {\r\n\t\t\tthis.options[i] = this.defaultOptions[i];\r\n\t\t}\r\n\r\n\t\tfor (let i in _options) {\r\n\t\t\tthis.options[i] = _options[i];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addChildren(childName: string, child: HTMLElement | HTMLElement[]) {\r\n\t\tthis.children[childName] = child;\r\n\t}\r\n\r\n\tpublic removeChildren(childName: string) {\r\n\t\tdelete this.children[childName];\r\n\t}\r\n}\r\n","import { IBehaviorConstructor } from \"../interfaces/behavior-constructor\";\r\nimport { IBehaviorOptions } from \"../interfaces/behavior-options\";\r\nimport { Behavior } from \"../classes/behavior\";\r\nimport { IBehaviorChildren } from \"../interfaces/behavior-children\";\r\n\r\nexport class BehaviorsParser {\r\n\tconstructor(public readonly behaviors: IBehaviorConstructor[], public options: IBehaviorOptions = {}) {\r\n\r\n\t}\r\n\r\n\tpublic initializeBehaviors(): Behavior[] {\r\n\t\tconst behaviorElements = document.querySelectorAll('[appaya-behavior]'),\r\n\t\t\tbehaviorInstances: Behavior[] = [];\r\n\r\n\t\tfor (let i = 0; i < behaviorElements.length; i++) {\r\n\t\t\tconst element: HTMLElement = behaviorElements[i] as HTMLElement,\r\n\t\t\t\tattrs = element.getAttribute('appaya-behavior');\r\n\r\n\t\t\tif (attrs == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst attrsArray = attrs.split(';');\r\n\r\n\t\t\tfor (const behavior of this.behaviors.filter(b => attrsArray.indexOf(b.behaviorName) >= 0)) {\r\n\t\t\t\tconst behaviorInstance = this.createInstance(element, behavior);\r\n\r\n\t\t\t\tbehaviorInstances.push(behaviorInstance);\r\n\t\t\t}\r\n\r\n\t\t\telement.removeAttribute('appaya-behavior');\r\n\t\t}\r\n\r\n\t\treturn behaviorInstances;\r\n\t}\r\n\r\n\tpublic checkBehaviors(): void {\r\n\t\tfor (const behavior of this.behaviors) {\r\n\t\t\tif (behavior.behaviorName == null) {\r\n\t\t\t\tconsole.warn('Null \"behaviorName\" on ' + behavior.name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate createInstance(element: HTMLElement, behavior: IBehaviorConstructor): Behavior {\r\n\t\tconst options = this.parseOptions(element);\r\n\t\tconst children = this.parseChildren(element, behavior);\r\n\r\n\t\treturn new behavior(element, options, children);\r\n\t}\r\n\r\n\tprivate parseOptions(element: HTMLElement): any {\r\n\t\tconst dataset = element.dataset,\r\n\t\t\tdatasetOptions = dataset['options'];\r\n\t\tlet options: any = {};\r\n\r\n\t\tif(datasetOptions) {\r\n\t\t\tif(this.options[datasetOptions]) {\r\n\t\t\t\toptions = this.options[datasetOptions];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(let i in dataset) {\r\n\t\t\tconst data = dataset[i];\r\n\t\t\tlet parsedData: any = data;\r\n\r\n\t\t\tswitch(data) {\r\n\t\t\t\tcase 'true':\r\n\t\t\t\t\tparsedData = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'false':\r\n\t\t\t\t\tparsedData = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(parseInt(parsedData))) {\r\n\t\t\t\t\t\tparsedData = parseInt(parsedData);\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toptions[i] = parsedData;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tdelete element.dataset[i];\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\t}\r\n\r\n\tprivate parseChildren(element: HTMLElement, behavior: IBehaviorConstructor) {\r\n\t\tlet childrenObject: IBehaviorChildren = {};\r\n\t\tconst children = element.querySelectorAll(`[${behavior.behaviorName}-child]`);\r\n\r\n\t\tfor(let i = 0; i < children.length; i++) {\r\n\t\t\tconst child = children[i] as HTMLElement,\r\n\t\t\t\tchildName = child.getAttribute(`${behavior.behaviorName}-child`);\r\n\r\n\t\t\tif(!childName)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tconst childObject = childrenObject[childName];\r\n\r\n\t\t\tif(childObject) {\r\n\t\t\t\tif(Array.isArray(childObject)) {\r\n\t\t\t\t\tchildObject.push(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchildrenObject[childName] = [childObject, child];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tchildrenObject[childName] = child;\r\n\t\t\t}\r\n\r\n\t\t\tchild.removeAttribute(`${behavior.behaviorName}-child`);\t\t\t\t\r\n\t\t}\r\n\r\n\t\treturn childrenObject;\r\n\t}\r\n}","import { IBehaviorConstructor } from \"./interfaces/behavior-constructor\";\r\nimport { IBehaviorOptions } from \"./interfaces/behavior-options\";\r\nimport { BehaviorsParser } from \"./core/behaviors-parser\";\r\nimport { Behavior } from \"./classes/behavior\";\r\n\r\n\r\nexport function BehaviorBootstrap(behaviors: IBehaviorConstructor[], options: IBehaviorOptions = {}): Behavior[] {\r\n\tconst behaviorsParser = new BehaviorsParser(behaviors, options),\r\n\t\tinstances = behaviorsParser.initializeBehaviors();\r\n\r\n\tbehaviorsParser.checkBehaviors();\r\n\r\n\tfor(let instance of instances) {\r\n\t\tinstance.beforeInit();\r\n\t\tinstance.init();\r\n\t}\r\n\r\n\treturn instances;\r\n}\r\n\r\n"],"sourceRoot":""}